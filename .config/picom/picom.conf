#################################
# BACKEND
#################################

experimental-backends = true;
backend = "glx";  # or "xrender"
glx-no-stencil = true;

#################################
# Animations (jonaburg fork)
#################################

transition-length = 150;

#################################
# Corners
#################################

# Doesn't look nice with xmonad's borders, or when only one program open
corner-radius = 10.0;
rounded-corners-exclude = [
    "name *= 'xmobar'",
    "name *= 'stalonetray'",
    "name *= 'tint2'"
]
round-borders = 1;
round-borders-exclude = [
    "name *= 'xmobar'",
    "name *= 'stalonetray'",
    "name *= 'tint2'"
]

#################################
# SHADOWS
#################################

#shadow = true;
#shadow-radius = 12;
#shadow-opacity = 1;

# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
shadow-exclude = [
    "! name~=''", # Any "Unknown" windows (prevents visual glitch with XFWM alt tab switcher)
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'picom'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "name *= 'xmobar'",
    "name *= 'stalonetray'",
    "class_g = 'Firefox' && argb",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
    "bounding_shaped"
];

#################################
# Opacity
#################################

blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'"
];

blur-method = "dual_kawase"; # Requires fork
blur-strength = 1;

opacity-rule = [
    "90:class_g = 'Emacs'",
    "75:class_g = 'Pcmanfm'",
    "70:class_g = 'Nitrogen'",
    "70:name = 'dzen slave'",
    "65:name = 'dzen title'"
];

#################################
# Fading
#################################

fading = true; # Fade windows during opacity changes.
fade-delta = 4; # The time between steps in a fade in milliseconds. (default 10).
fade-in-step = 0.03; # Opacity change between steps while fading in. (default 0.028).
fade-out-step = 0.03; # Opacity change between steps while fading out. (default 0.03).
no-fading-openclose = false; # Fade windows in/out when opening/closing

fade-exclude = [ ];

#################################
# Other
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
detect-client-opacity = true;

vsync = true; # Vertical synchronization: match the refresh rate of the monitor

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = false;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

#################################
# Window type settings
#################################

wintypes:
{
    dock    = { shadow = false };
    tooltip = { shadow = false; opacity = 0.85 };
};

######################
# XSync
# See: https://github.com/yshui/picom/commit/b18d46bcbdc35a3b5620d817dd46fbc76485c20d
######################

# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users.
xrender-sync-fence = true;
